// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using System;

public class SettingTable : CsvTable
{
	public class Row
	{
		public string Year{get;set;}
		public string Make{get;set;}
		public string Model{get;set;}
		public string Description{get;set;}
		public string Price{get;set;}

	}

	List<Row> rowList = new List<Row>();

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public override void Load(string csvData)
	{
		rowList.Clear();
		grid = ParserCSV.Parse(csvData);

        for (int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.Year = grid[i][0];
			row.Make = grid[i][1];
			row.Model = grid[i][2];
			row.Description = grid[i][3];
			row.Price = grid[i][4];
			rowList.Add(row);
		}
		isLoaded = true;
	}
    public override string UnLoad()
    {
        for (int i = 1; i < rowList.Count; i++)
        {
            Row row = rowList[i-1];
            grid[i][0] = row.Year;
            grid[i][1] = row.Make;
            grid[i][2] = row.Model;
            grid[i][3] = row.Description;
            grid[i][4] = row.Price;
        }
       return UParserCSV.UParser(grid);
    }

    public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_Year(string find)
	{
		return rowList.Find(x => x.Year == find);
	}
	public List<Row> FindAll_Year(string find)
	{
		return rowList.FindAll(x => x.Year == find);
	}
	public Row Find_Make(string find)
	{
		return rowList.Find(x => x.Make == find);
	}
	public List<Row> FindAll_Make(string find)
	{
		return rowList.FindAll(x => x.Make == find);
	}
	public Row Find_Model(string find)
	{
		return rowList.Find(x => x.Model == find);
	}
	public List<Row> FindAll_Model(string find)
	{
		return rowList.FindAll(x => x.Model == find);
	}
	public Row Find_Description(string find)
	{
		return rowList.Find(x => x.Description == find);
	}
	public List<Row> FindAll_Description(string find)
	{
		return rowList.FindAll(x => x.Description == find);
	}
	public Row Find_Price(string find)
	{
		return rowList.Find(x => x.Price == find);
	}
	public List<Row> FindAll_Price(string find)
	{
		return rowList.FindAll(x => x.Price == find);
	}

    
}